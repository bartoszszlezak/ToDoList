{"version":3,"sources":["views/SignIn.js","service/ServiceRegistration.js","Validate/validateRegistration.js","components/SignUp.js","views/SignUpSection.js","components/Navbar.js","views/ToDoList.js","App.js","index.js"],"names":["SignIn","useState","identifier","password","details","setDetails","history","useHistory","submitfunc","e","a","preventDefault","axios","post","then","response","data","console","log","token","jwt","todo","user","to_do_lists","id","localStorage","setItem","JSON","stringify","getItem","push","error","className","onSubmit","type","name","onChange","target","value","placeholder","to","ServiceRegistration","submitForm","validate","username","email","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","length","handleChange","handleSubmit","trim","test","SignUp","Service","SignUpSection","isSubmitted","setIsSubmitted","class","Navbar","listIndex","logged","setLogged","onClick","removeItem","ToDoList","defaults","headers","common","Authorization","Search","Input","searchText","setSearchText","open","setOpen","nameList","setNameList","newList","setNewList","isDone","newTask","setNewTask","openUpdate","setOpenUpdate","updateList","setUpdateList","openInfo","setOpenInfo","task","setRequestBody","myLists","setMyLists","options","openSort","setOpenSort","anchorRef","useRef","selectedIndex","setSelectedIndex","handleOpenInfo","handleClose","handleCloseUpdate","handleCloseInfo","handleTaskCancel","document","getElementById","handleCloseSort","event","current","contains","allowClear","onSearch","style","width","margin","ButtonGroup","variant","color","ref","Button","sort","b","reverse","size","undefined","prevOpen","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","map","option","index","MenuItem","disabled","selected","handleMenuItemClick","listKey","result","split","filter","list","some","key","toString","toLowerCase","indexOf","search","ml","Modal","onClose","position","top","left","height","backgroundColor","display","flexDirection","alignItems","marginTop","required","t","checked","status","splice","border","App","path","exact","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.419e58a8.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction SignIn() {\r\n\r\n    const [details, setDetails] = useState({ identifier: \"\", password: \"\" });\r\n    let history = useHistory();\r\n\r\n\r\n    const saveLocal = () => {\r\n        if (localStorage.getItem(\"access_token\")) {\r\n            history.push(\"/todolist\");\r\n        } else {\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n    const submitfunc = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.post(\"https://recruitment.ultimate.systems/auth/local\", details).then(response => {\r\n                if (response.data != null) {\r\n                    console.log(response.data);\r\n                    const token = response.data.jwt;\r\n                    const todo = response.data.user.to_do_lists;\r\n                    const id = response.data.user.id;\r\n                    localStorage.setItem('access_token', JSON.stringify(token));\r\n                    localStorage.setItem('user_id', id);\r\n                    localStorage.setItem('to_do_lists', todo);\r\n                }\r\n                saveLocal();\r\n            }\r\n            );\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"mainContainer\">\r\n            <div className='logInContainer'>\r\n                <h1 className=\"loginHeader\">\r\n                    Login\r\n                </h1>\r\n                <div className=\"formContainer\">\r\n                    <form onSubmit={submitfunc}>\r\n                        <div className=\"mb-3\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"identifier\"\r\n                                className=\"form-control\"\r\n                                id=\"SignInEmail\"\r\n                                onChange={e => setDetails({ ...details, identifier: e.target.value })}\r\n                                value={details.identifier}\r\n                                placeholder=\"Email or username\" />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\"\r\n                                id=\"SignInPassword\"\r\n                                onChange={e => setDetails({ ...details, password: e.target.value })}\r\n                                value={details.password} />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\">\r\n                            Login\r\n                        </button>\r\n                    </form>\r\n                    <div className=\"createAccountContainer\">\r\n                        <p>\r\n                            or\r\n                        </p>\r\n                        <Link to='/signup' className=\"accountLink\">\r\n                            <p className=\"createAccount\">\r\n                                create an account\r\n                            </p>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignIn;\r\n","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ServiceRegistration = (submitForm, validate) => {\r\n  const [values, setValues] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    setErrors(validate(values));\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (Object.keys(errors).length === 0 && isSubmitting) {\r\n\r\n        axios.post(\"https://recruitment.ultimate.systems/auth/local/register\", values)\r\n          .then(response => {\r\n            if (response.data != null) {\r\n              console.log(response.data)\r\n            }\r\n\r\n          });\r\n\r\n        submitForm();\r\n      }\r\n    },\r\n    [errors]\r\n  );\r\n\r\n  return { handleChange, handleSubmit, values, errors };\r\n};\r\n\r\nexport default ServiceRegistration;","export default function validate(values) {\r\n  let errors = {};\r\n\r\n  if (!values.username.trim()) {\r\n    errors.username = 'Username required';\r\n  }\r\n  if (!values.email) {\r\n    errors.email = 'Email required';\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n    errors.email = 'Invalid email address';\r\n  }\r\n  if (!values.password) {\r\n    errors.password = 'Password is required';\r\n  } else if (values.password.length < 6) {\r\n    errors.password = 'Password is too short';\r\n  }\r\n  return errors;\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Service from '../service/ServiceRegistration';\r\nimport validate from '../Validate/validateRegistration';\r\n\r\n\r\nconst SignUp = ({ submitForm }) => {\r\n\r\n    const { handleChange, handleSubmit, values, errors } = Service(submitForm, validate);\r\n\r\n    return (\r\n        <div className=\"mainContainer\">\r\n            <div className='logInContainer'>\r\n                <div className=\"accountLinkContainer\">\r\n                    <Link className=\"accountLink\" to=\"/\">\r\n                        <i className=\"fas fa-arrow-left\" />\r\n                    </Link>\r\n                </div>\r\n\r\n                <h1 className=\"loginHeader\">\r\n                    Create an new account\r\n                </h1>\r\n                <div className=\"formContainer\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"mb-3\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"SignUpUsername\"\r\n                                name=\"username\"\r\n                                placeholder=\"Username\"\r\n                                value={values.username}\r\n                                onChange={handleChange}\r\n                            />\r\n                            {errors.username && <p className=\"singInfo\">{errors.username}</p>}\r\n\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                name=\"email\"\r\n                                id=\"SignUpEmail\"\r\n                                placeholder=\"Email\"\r\n                                value={values.email}\r\n                                onChange={handleChange}\r\n                            />\r\n                            {errors.email && <p className=\"singInfo\">{errors.email}</p>}\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\"\r\n                                name='password'\r\n                                id=\"SignUpPassword\"\r\n                                value={values.password}\r\n                                onChange={handleChange}\r\n                            />\r\n                            {errors.password && <p className=\"singInfo\">{errors.password}</p>}\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\">\r\n                            Create\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignUp from '../components/SignUp';\r\n\r\nconst SignUpSection = () => {\r\n\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n    function submitForm() {\r\n        setIsSubmitted(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            {!isSubmitted ? (\r\n                <SignUp submitForm={submitForm} />\r\n            ) : (\r\n                <div className=\"mainContainer\">\r\n                    <Link to='/'>\r\n                        <button type=\"button\" class=\"btn btn-success\">Success</button>\r\n                    </Link>\r\n                </div>\r\n            )}\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignUpSection;\r\n","import React, { useState, useEffect } from 'react';\r\nimport '../styles/signInUp.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Navbar() {\r\n\r\n    const [logged, setLogged] = useState(false);\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('access_token')) {\r\n            setLogged(true);\r\n        }\r\n    }, [logged]);\r\n\r\n    const handleLogOut = () => {\r\n        setLogged(false);\r\n        localStorage.removeItem('access_token');\r\n        localStorage.removeItem('user_id');\r\n        localStorage.removeItem('to_do_lists');\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-dark bg-dark\">\r\n                <p className='appName'>\r\n                    ToDo-List\r\n                </p>\r\n                <p className={logged ? 'iconSignOut' : 'noIcon'}>\r\n                    <i className=\"fas fa-sign-out-alt\" onClick={handleLogOut} />\r\n                </p>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport \"../styles/todolist.css\"\r\nimport 'antd/dist/antd.css';\r\nimport { Input } from 'antd';\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\n\r\nlet listIndex;\r\n\r\n\r\nfunction ToDoList() {\r\n\r\n\r\n    axios.defaults.headers.common = {\r\n        Authorization: \"Bearer \" + localStorage.getItem('access_token')\r\n    }\r\n\r\n    const { Search } = Input;\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const onSearch = value => {\r\n        setSearchText(value);\r\n    }\r\n\r\n    let history = useHistory();\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [nameList, setNameList] = useState(\"\");\r\n    const [newList, setNewList] = useState([]);\r\n    const [newTask, setNewTask] = useState({ name: \"\", isDone: false });\r\n\r\n    const [openUpdate, setOpenUpdate] = useState(false);\r\n    const [updateList, setUpdateList] = useState([]);\r\n\r\n    const [openInfo, setOpenInfo] = useState(false);\r\n\r\n    const [requestBody, setRequestBody] = useState({ name: \"\", task: [] });\r\n\r\n    const [myLists, setMyLists] = useState([]);\r\n\r\n    const options = [\"Alphabetically\", \"Reverse\"];\r\n    const [openSort, setOpenSort] = useState(false);\r\n    const anchorRef = useRef(null);\r\n    const [selectedIndex, setSelectedIndex] = useState(1);\r\n\r\n\r\n    if (!localStorage.getItem(\"access_token\")) {\r\n        history.push(\"/\");\r\n    }\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleOpenUpdate = (e) => {\r\n        setOpenUpdate(true);\r\n        listIndex = e;\r\n        setUpdateList(myLists[listIndex].task);\r\n    };\r\n\r\n    const handleOpenInfo = () => {\r\n        setOpenInfo(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleCloseUpdate = () => {\r\n        setOpenUpdate(false);\r\n    };\r\n\r\n    const handleCloseInfo = () => {\r\n        setOpenInfo(false);\r\n    };\r\n\r\n    const handleTaskCancel = () => {\r\n        let element = document.getElementById(\"taskNameInput\");\r\n        element.value = \"\";\r\n    }\r\n\r\n    const handleAdd = () => {\r\n        setNewList([...newList, newTask]);\r\n    }\r\n\r\n    const handleAddUpdate = () => {\r\n        setUpdateList([...updateList, newTask]);\r\n    }\r\n\r\n    const handleCancelUpdateAll = () => {\r\n        setUpdateList([]);\r\n        setNameList(\"\");\r\n        setNewTask({ name: \"\", isDone: false });\r\n        handleCloseUpdate();\r\n    }\r\n\r\n    const handleStatus = (status) => {\r\n        if (document.getElementById(status).checked === true) {\r\n            updateList[status].isDone = true;\r\n        } else {\r\n            updateList[status].isDone = false;\r\n        }\r\n    }\r\n\r\n    const handleSaveUpdate = () => {\r\n\r\n        //const token = localStorage.getItem('access_token');\r\n\r\n        setRequestBody({ name: myLists[listIndex].name, task: updateList });\r\n        if (nameList !== \"\") {\r\n            myLists[listIndex].name = nameList;\r\n        }\r\n        myLists[listIndex].task = updateList;\r\n        setNameList(\"\");\r\n        setNewTask({ name: \"\", isDone: false });\r\n        setUpdateList([]);\r\n        handleCloseUpdate();\r\n\r\n        // axios.put(\"https://recruitment.ultimate.systems//to-do-lists/{id}\", requestBody, {headers: {\r\n        //     \"Content-type\": \"Application/json\",\r\n        //     \"Authorization\": `Bearer ${token}`\r\n        //     }   \r\n        // })\r\n        // .then(response => {\r\n        //     if(response.data != null){\r\n        //         console.log(response.data)\r\n        //     }\r\n        // });\r\n    }\r\n\r\n    const handleDeleteList = () => {\r\n\r\n        //const token = localStorage.getItem('access_token')\r\n\r\n        handleCloseUpdate();\r\n        myLists.splice(listIndex, 1);\r\n\r\n        // axios.delete(\"https://recruitment.ultimate.systems//to-do-lists/{id}\", {headers: {\r\n        //     \"Authorization\": `Bearer ${token}`\r\n        //     }   \r\n        // })\r\n        // .then(response => {\r\n        //     if(response.data != null){\r\n        //         console.log(response.data)\r\n        //     }\r\n        // });\r\n\r\n    }\r\n\r\n    const handleCancelAll = () => {\r\n        setNameList(\"\");\r\n        setNewTask({ name: \"\", isDone: false });\r\n        setNewList([]);\r\n        handleClose();\r\n    };\r\n\r\n\r\n    const handleSave = () => {\r\n\r\n        //const token = localStorage.getItem('access_token');\r\n        setRequestBody({ name: nameList, task: newList });\r\n        setMyLists([...myLists, { name: nameList, task: newList }]);\r\n        setNameList(\"\");\r\n        setNewTask({ name: \"\", isDone: false });\r\n        setNewList([]);\r\n        handleClose();\r\n\r\n\r\n        // axios.post(\"https://recruitment.ultimate.systems/to-do-lists\", requestBody, {headers: {\r\n        //     \"Content-type\": \"Application/json\",\r\n        //     \"Authorization\": `Bearer ${token}`\r\n        //     }   \r\n        // })\r\n        // .then(response => {\r\n        //     if(response.data != null){\r\n        //         console.log(response.data)\r\n        //     }\r\n        // });\r\n    }\r\n\r\n\r\n    const alphabeticSort = () => {\r\n        handleOpenInfo();\r\n        setMyLists(myLists.sort(({ name: a }, { name: b }) => {\r\n            return (a < b) ? -1 : ((a > b) ? 1 : 0);\r\n        }));\r\n    }\r\n\r\n    const reverseSort = () => {\r\n        handleOpenInfo();\r\n        setMyLists(myLists.reverse());\r\n    }\r\n\r\n\r\n    const handleClickSort = () => {\r\n        if (options[selectedIndex] === \"Alphabetically\") {\r\n            alphabeticSort();\r\n        } else {\r\n            reverseSort();\r\n        }\r\n\r\n    };\r\n\r\n    const handleMenuItemClick = (event, index) => {\r\n        setSelectedIndex(index);\r\n        setOpenSort(false);\r\n    };\r\n\r\n    const handleToggleSort = () => {\r\n        setOpenSort((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleCloseSort = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n\r\n        setOpenSort(false);\r\n    };\r\n\r\n\r\n    function search(myLists) {\r\n\r\n        const listKey = [\"name\"];\r\n\r\n        if (searchText.length === 0)\r\n            return myLists;\r\n        else {\r\n            let filtr;\r\n            let filtr2;\r\n            let result = searchText.split(\" \");\r\n            if (result.length === 1) {\r\n                filtr = myLists.filter((list) =>\r\n                    listKey.some((key) => list[key].toString().toLowerCase().indexOf(result[0].toString().toLowerCase()) > -1));\r\n                return filtr;\r\n            }\r\n            else if (result.length === 2 && result[2] !== \"\") {\r\n                filtr = myLists.filter((list) =>\r\n                    listKey.some((key) => list[key].toString().toLowerCase().indexOf(result[0].toString().toLowerCase()) > -1));\r\n                filtr2 = filtr.filter((list) =>\r\n                    listKey.some((key) => list[key].toString().toLowerCase().indexOf(result[1].toString().toLowerCase()) > -1));\r\n                return filtr2;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"mainContainer\">\r\n\r\n            <div className=\"toDoListContainer\">\r\n                <div className=\"searchContainer\">\r\n                    <Search placeholder=\"Search\" allowClear onSearch={onSearch} style={{ width: 200, margin: \"2% 5%\" }} />\r\n\r\n                    <ButtonGroup variant=\"contained\" color=\"secondary\" ref={anchorRef} aria-label=\"split button\">\r\n                        <Button onClick={handleClickSort}>{options[selectedIndex]}</Button>\r\n                        <Button\r\n                            color=\"secondary\"\r\n                            size=\"small\"\r\n                            aria-controls={openSort ? 'split-button-menu' : undefined}\r\n                            aria-expanded={openSort ? 'true' : undefined}\r\n                            aria-label=\"select merge strategy\"\r\n                            aria-haspopup=\"menu\"\r\n                            onClick={handleToggleSort}\r\n                        >\r\n                            <ArrowDropDownIcon />\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                    <Popper open={openSort} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                        {({ TransitionProps, placement }) => (\r\n                            <Grow\r\n                                {...TransitionProps}\r\n                                style={{\r\n                                    transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\r\n                                }}\r\n                            >\r\n                                <Paper>\r\n                                    <ClickAwayListener onClickAway={handleCloseSort}>\r\n                                        <MenuList id=\"split-button-menu\">\r\n                                            {options.map((option, index) => (\r\n                                                <MenuItem\r\n                                                    key={option}\r\n                                                    disabled={index === 2}\r\n                                                    selected={index === selectedIndex}\r\n                                                    onClick={(event) => handleMenuItemClick(event, index)}\r\n                                                >\r\n                                                    {option}\r\n                                                </MenuItem>\r\n                                            ))}\r\n                                        </MenuList>\r\n                                    </ClickAwayListener>\r\n                                </Paper>\r\n                            </Grow>\r\n                        )}\r\n                    </Popper>\r\n\r\n                    {/* <button type=\"button\" className=\"btn btn-secondary\">Sort</button> */}\r\n                </div>\r\n                <div className=\"contentContainer\">\r\n                    {search(myLists).map(ml => (\r\n                        <div key={myLists.indexOf(ml)} className=\"myListsContainer\" onClick={() => handleOpenUpdate(myLists.indexOf(ml))}>\r\n                            <p className=\"myListName\">{ml.name}</p>\r\n                            <p className=\"myListInfo\">Created at: 18-03-2021</p>\r\n                            <p className=\"myListInfo\">completed: 15 Uncompleted: 10 All: 25</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"openModalContainer\">\r\n                    <p>\r\n                        <i className=\"fas fa-plus-circle\" onClick={handleOpen}></i>\r\n                    </p>\r\n                </div>\r\n\r\n\r\n                <Modal\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                >\r\n                    <div style={\r\n                        {\r\n                            position: \"absolute\",\r\n                            top: \"20%\", left: \"30%\",\r\n                            width: \"40%\",\r\n                            height: \"60%\",\r\n                            backgroundColor: \"#2D2D2D\",\r\n                            display: 'flex',\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\"\r\n                        }}>\r\n                        <input\r\n                            style={{ width: \"80%\", marginTop: \"10px\" }}\r\n                            type=\"text\"\r\n                            name=\"listNameInput\"\r\n                            className=\"form-control\"\r\n                            id=\"listNameInput\"\r\n                            onChange={e => setNameList(e.target.value)}\r\n                            value={nameList}\r\n                            placeholder=\"List name\"\r\n                            required\r\n                        />\r\n                        <div className=\"newTasksContainer\">\r\n                            {newList.map(t => (\r\n                                <div key={t.name} className=\"addedTaskContainer\">\r\n                                    <div className=\"input-group-text\" style={{ width: \"10%\" }}>\r\n                                        <input className=\"form-check-input mt-0\" type=\"checkbox\" />\r\n                                    </div>\r\n                                    <div className=\"newTaskNameWrapper\">\r\n                                        <p className=\"newTaskName\">{t.name}</p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            ))}\r\n                            <div className=\"input-group mb-3\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"taskNameInput\"\r\n                                    required\r\n                                    className=\"form-control\"\r\n                                    id=\"taskNameInput\"\r\n                                    onChange={e => setNewTask({ ...newTask, name: e.target.value })}\r\n                                    value={newTask.name}\r\n                                    placeholder=\"Task name\" />\r\n                            </div>\r\n\r\n                            <div className=\"buttonsContainer\">\r\n                                <button type=\"button\" className=\"btn btn-danger\" onClick={handleTaskCancel}>CANCEL</button>\r\n                                <button type=\"button\" className=\"btn btn-warning\" onClick={handleAdd}>ADD</button>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"newTaskContainerButtons\">\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={handleCancelAll}>CANCEL</button>\r\n                            <button type=\"button\" className=\"btn btn-warning\" onClick={handleSave}>SAVE</button>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n\r\n                <Modal\r\n                    open={openUpdate}\r\n                    onClose={handleCloseUpdate}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                >\r\n                    <div style={\r\n                        {\r\n                            position: \"absolute\",\r\n                            top: \"20%\", left: \"30%\",\r\n                            width: \"40%\",\r\n                            height: \"60%\",\r\n                            backgroundColor: \"#2D2D2D\",\r\n                            display: 'flex',\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\"\r\n                        }}>\r\n                        <input\r\n                            style={{ width: \"80%\", marginTop: \"10px\" }}\r\n                            type=\"text\"\r\n                            name=\"listNameInput\"\r\n                            className=\"form-control\"\r\n                            id=\"listNameInput\"\r\n                            onChange={e => setNameList(e.target.value)}\r\n                            value={nameList}\r\n                            placeholder={listIndex != null && myLists.length != 0 && myLists[listIndex] ? myLists[listIndex].name : \"List Name\"}\r\n                            required\r\n                        />\r\n                        <div className=\"newTasksContainer\">\r\n                            {updateList.length !== 0 ? (updateList.map(t => (\r\n                                <div key={t.name} className=\"addedTaskContainer\">\r\n                                    <div className=\"input-group-text\" style={{ width: \"10%\" }}>\r\n                                        <input className=\"form-check-input mt-0\" type=\"checkbox\" checked={t.isDone ? true : false} id={updateList.indexOf(t)} onChange={() => handleStatus(updateList.indexOf(t))} />\r\n                                    </div>\r\n                                    <div className=\"newTaskNameWrapper\">\r\n                                        <p className=\"newTaskName\">{t.name}</p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            ))) : null}\r\n                            <div className=\"input-group mb-3\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"taskNameInput\"\r\n                                    required\r\n                                    className=\"form-control\"\r\n                                    id=\"taskNameInput\"\r\n                                    onChange={e => setNewTask({ ...newTask, name: e.target.value })}\r\n                                    value={newTask.name}\r\n                                    placeholder=\"Task name\" />\r\n                            </div>\r\n\r\n                            <div className=\"buttonsContainer\">\r\n                                <button type=\"button\" className=\"btn btn-danger\" onClick={handleTaskCancel}>CANCEL</button>\r\n                                <button type=\"button\" className=\"btn btn-warning\" onClick={handleAddUpdate}>ADD</button>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"newTaskContainerButtons\">\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={handleCancelUpdateAll}>CANCEL</button>\r\n                            <button type=\"button\" className=\"btn btn-warning\" onClick={handleSaveUpdate}>SAVE</button>\r\n                            <button type=\"button\" className=\"btn btn-dark\" onClick={handleDeleteList}>Delete List</button>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n\r\n\r\n                <Modal\r\n                    open={openInfo}\r\n                    onClose={handleCloseInfo}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                >\r\n                    <div style={\r\n                        {\r\n                            position: \"absolute\",\r\n                            top: \"40%\", left: \"40%\",\r\n                            width: \"20%\",\r\n                            height: \"20%\",\r\n                            backgroundColor: \"#2D2D2D\",\r\n                            border: \"1px solid white\",\r\n                            display: 'flex',\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\"\r\n                        }}>\r\n                        <div className=\"modalInfoWrapper\">\r\n                            <p className=\"modalInfoSuccess\">Sorting complete</p>\r\n                            <button type=\"button\" className=\"btn btn-success\" onClick={handleCloseInfo}>Confirm</button>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoList;\r\n","import './App.css';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport SignIn from './views/SignIn';\r\nimport SignUp from './views/SignUpSection';\r\nimport Navbar from './components/Navbar';\r\nimport ToDoList from './views/ToDoList';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Navbar/>\r\n        <Switch>\r\n          <Route path='/' exact component={SignIn}/>\r\n          <Route path='/signup' component={SignUp}/>\r\n          <Route path='/todolist' component={ToDoList}/>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}